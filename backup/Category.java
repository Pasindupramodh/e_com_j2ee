package model;
// Generated Nov 22, 2023 10:04:55 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name="category"
    ,catalog="j2e_ecom_db"
)
public class Category  implements java.io.Serializable {


     private Integer id;
     private SystemUser systemUserByCreatedBy;
     private SystemUser systemUserByUpdatedBy;
     private String categoryName;
     private String categoryIcon;
     private String categoryDesc;
     private Boolean isActive;
     private Date createdAt;
     private Date updatedAt;
     private Set<Brand> brands = new HashSet<Brand>(0);

    public Category() {
    }

	
    public Category(SystemUser systemUserByCreatedBy, SystemUser systemUserByUpdatedBy) {
        this.systemUserByCreatedBy = systemUserByCreatedBy;
        this.systemUserByUpdatedBy = systemUserByUpdatedBy;
    }
    public Category(SystemUser systemUserByCreatedBy, SystemUser systemUserByUpdatedBy, String categoryName, String categoryIcon, String categoryDesc, Boolean isActive, Date createdAt, Date updatedAt, Set<Brand> brands) {
       this.systemUserByCreatedBy = systemUserByCreatedBy;
       this.systemUserByUpdatedBy = systemUserByUpdatedBy;
       this.categoryName = categoryName;
       this.categoryIcon = categoryIcon;
       this.categoryDesc = categoryDesc;
       this.isActive = isActive;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.brands = brands;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="created_by", nullable=false)
    public SystemUser getSystemUserByCreatedBy() {
        return this.systemUserByCreatedBy;
    }
    
    public void setSystemUserByCreatedBy(SystemUser systemUserByCreatedBy) {
        this.systemUserByCreatedBy = systemUserByCreatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="updated_by", nullable=false)
    public SystemUser getSystemUserByUpdatedBy() {
        return this.systemUserByUpdatedBy;
    }
    
    public void setSystemUserByUpdatedBy(SystemUser systemUserByUpdatedBy) {
        this.systemUserByUpdatedBy = systemUserByUpdatedBy;
    }

    
    @Column(name="category_name", length=50)
    public String getCategoryName() {
        return this.categoryName;
    }
    
    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    
    @Column(name="category_icon", length=45)
    public String getCategoryIcon() {
        return this.categoryIcon;
    }
    
    public void setCategoryIcon(String categoryIcon) {
        this.categoryIcon = categoryIcon;
    }

    
    @Column(name="category_desc", length=145)
    public String getCategoryDesc() {
        return this.categoryDesc;
    }
    
    public void setCategoryDesc(String categoryDesc) {
        this.categoryDesc = categoryDesc;
    }

    
    @Column(name="is_active")
    public Boolean getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", length=19)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="category")
    public Set<Brand> getBrands() {
        return this.brands;
    }
    
    public void setBrands(Set<Brand> brands) {
        this.brands = brands;
    }




}


