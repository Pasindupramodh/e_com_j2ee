package model;
// Generated Nov 22, 2023 10:04:55 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="j2e_ecom_db"
)
public class Product  implements java.io.Serializable {


     private Integer id;
     private Brand brand;
     private SystemUser systemUserByCreatedBy;
     private SystemUser systemUserByUpdatedBy;
     private String productName;
     private Double qty;
     private Double productPrice;
     private Double discountPrice;
     private String shortDescription;
     private String description;
     private Boolean published;
     private Date createdAt;
     private Date updatedAt;
     private Set<Tag> tags = new HashSet<Tag>(0);
     private Set<Sold> solds = new HashSet<Sold>(0);
     private Set<Order> orders = new HashSet<Order>(0);
     private Set<Reviews> reviewses = new HashSet<Reviews>(0);
     private Set<CartItem> cartItems = new HashSet<CartItem>(0);
     private Set<AttributeVariant> attributeVariants = new HashSet<AttributeVariant>(0);
     private Set<Gallery> galleries = new HashSet<Gallery>(0);

    public Product() {
    }

	
    public Product(Brand brand, SystemUser systemUserByCreatedBy, SystemUser systemUserByUpdatedBy) {
        this.brand = brand;
        this.systemUserByCreatedBy = systemUserByCreatedBy;
        this.systemUserByUpdatedBy = systemUserByUpdatedBy;
    }
    public Product(Brand brand, SystemUser systemUserByCreatedBy, SystemUser systemUserByUpdatedBy, String productName, Double qty, Double productPrice, Double discountPrice, String shortDescription, String description, Boolean published, Date createdAt, Date updatedAt, Set<Tag> tags, Set<Sold> solds, Set<Order> orders, Set<Reviews> reviewses, Set<CartItem> cartItems, Set<AttributeVariant> attributeVariants, Set<Gallery> galleries) {
       this.brand = brand;
       this.systemUserByCreatedBy = systemUserByCreatedBy;
       this.systemUserByUpdatedBy = systemUserByUpdatedBy;
       this.productName = productName;
       this.qty = qty;
       this.productPrice = productPrice;
       this.discountPrice = discountPrice;
       this.shortDescription = shortDescription;
       this.description = description;
       this.published = published;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.tags = tags;
       this.solds = solds;
       this.orders = orders;
       this.reviewses = reviewses;
       this.cartItems = cartItems;
       this.attributeVariants = attributeVariants;
       this.galleries = galleries;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="brand_id", nullable=false)
    public Brand getBrand() {
        return this.brand;
    }
    
    public void setBrand(Brand brand) {
        this.brand = brand;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="created_by", nullable=false)
    public SystemUser getSystemUserByCreatedBy() {
        return this.systemUserByCreatedBy;
    }
    
    public void setSystemUserByCreatedBy(SystemUser systemUserByCreatedBy) {
        this.systemUserByCreatedBy = systemUserByCreatedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="updated_by", nullable=false)
    public SystemUser getSystemUserByUpdatedBy() {
        return this.systemUserByUpdatedBy;
    }
    
    public void setSystemUserByUpdatedBy(SystemUser systemUserByUpdatedBy) {
        this.systemUserByUpdatedBy = systemUserByUpdatedBy;
    }

    
    @Column(name="product_name", length=245)
    public String getProductName() {
        return this.productName;
    }
    
    public void setProductName(String productName) {
        this.productName = productName;
    }

    
    @Column(name="qty", precision=22, scale=0)
    public Double getQty() {
        return this.qty;
    }
    
    public void setQty(Double qty) {
        this.qty = qty;
    }

    
    @Column(name="product_price", precision=22, scale=0)
    public Double getProductPrice() {
        return this.productPrice;
    }
    
    public void setProductPrice(Double productPrice) {
        this.productPrice = productPrice;
    }

    
    @Column(name="discount_price", precision=22, scale=0)
    public Double getDiscountPrice() {
        return this.discountPrice;
    }
    
    public void setDiscountPrice(Double discountPrice) {
        this.discountPrice = discountPrice;
    }

    
    @Column(name="short_description", length=245)
    public String getShortDescription() {
        return this.shortDescription;
    }
    
    public void setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="published")
    public Boolean getPublished() {
        return this.published;
    }
    
    public void setPublished(Boolean published) {
        this.published = published;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at", length=19)
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Tag> getTags() {
        return this.tags;
    }
    
    public void setTags(Set<Tag> tags) {
        this.tags = tags;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Sold> getSolds() {
        return this.solds;
    }
    
    public void setSolds(Set<Sold> solds) {
        this.solds = solds;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Order> getOrders() {
        return this.orders;
    }
    
    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Reviews> getReviewses() {
        return this.reviewses;
    }
    
    public void setReviewses(Set<Reviews> reviewses) {
        this.reviewses = reviewses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<CartItem> getCartItems() {
        return this.cartItems;
    }
    
    public void setCartItems(Set<CartItem> cartItems) {
        this.cartItems = cartItems;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<AttributeVariant> getAttributeVariants() {
        return this.attributeVariants;
    }
    
    public void setAttributeVariants(Set<AttributeVariant> attributeVariants) {
        this.attributeVariants = attributeVariants;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Gallery> getGalleries() {
        return this.galleries;
    }
    
    public void setGalleries(Set<Gallery> galleries) {
        this.galleries = galleries;
    }




}


